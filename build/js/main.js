"use strict";

(function () {
  var vh = window.innerHeight * 0.01;
  document.documentElement.style.setProperty('--vh', "".concat(vh, "px"));
  var $body = document.querySelector('body');

  function debounce(func) {
    var timer;
    return function (event) {
      if (timer) clearTimeout(timer);
      timer = setTimeout(func, 500, event);
    };
  }

  function Modal(trigger, modal) {
    this.trigger = trigger;
    this.modal = modal;
    this.overlay = this.modal.querySelector('.modal__overlay');
    this.closeBtn = this.modal.querySelector('.modal__close');
    this.onOverlayClick = this.onOverlayClick.bind(this);
    this.onCloseClick = this.onCloseClick.bind(this);
    this.onTriggerClick = this.onTriggerClick.bind(this);
    this.onResize = this.onResize.bind(this);
    this.addEventListeners();
  }

  Modal.prototype.open = function () {
    this.modal.classList.add('js-show');
    $body.classList.add('js__body-no-scroll');
  };

  Modal.prototype.close = function () {
    this.modal.classList.remove('js-show');
    $body.classList.remove('js__body-no-scroll');
  };

  Modal.prototype.onOverlayClick = function (e) {
    if (e.target === this.overlay) {
      this.close();
    }
  };

  Modal.prototype.onCloseClick = function () {
    this.close();
  };

  Modal.prototype.onTriggerClick = function () {
    this.open();
  };

  Modal.prototype.onResize = function () {
    var vh = window.innerHeight * 0.01;
    document.documentElement.style.setProperty('--vh', "".concat(vh, "px"));
  };

  Modal.prototype.addEventListeners = function () {
    this.overlay.addEventListener('click', this.onOverlayClick);
    this.closeBtn.addEventListener('click', this.onCloseClick);
    this.trigger.addEventListener('click', this.onTriggerClick);
    window.addEventListener('resize', debounce(this.onResize));
  };

  var $modal = document.querySelector('.modal');
  var $button = document.querySelector('.modal-button');
  var modal = new Modal($button, $modal);
})();

(function () {
  var mySwiper = new Swiper('.swiper-container', {
    slidesPerView: 'auto',
    freeMode: true,
    navigation: {
      nextEl: '.swiper-button-next',
      prevEl: '.swiper-button-prev'
    },
    breakpoints: {
      900: {
        slidesPerView: 1,
        freeMode: false
      }
    }
  });
  var $swiper = $('.swiper-container');
  console.log($swiper);
})();
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1vZGFsLmpzIiwic2xpZGVyLmpzIl0sIm5hbWVzIjpbInZoIiwid2luZG93IiwiaW5uZXJIZWlnaHQiLCJkb2N1bWVudCIsImRvY3VtZW50RWxlbWVudCIsInN0eWxlIiwic2V0UHJvcGVydHkiLCIkYm9keSIsInF1ZXJ5U2VsZWN0b3IiLCJkZWJvdW5jZSIsImZ1bmMiLCJ0aW1lciIsImV2ZW50IiwiY2xlYXJUaW1lb3V0Iiwic2V0VGltZW91dCIsIk1vZGFsIiwidHJpZ2dlciIsIm1vZGFsIiwib3ZlcmxheSIsImNsb3NlQnRuIiwib25PdmVybGF5Q2xpY2siLCJiaW5kIiwib25DbG9zZUNsaWNrIiwib25UcmlnZ2VyQ2xpY2siLCJvblJlc2l6ZSIsImFkZEV2ZW50TGlzdGVuZXJzIiwicHJvdG90eXBlIiwib3BlbiIsImNsYXNzTGlzdCIsImFkZCIsImNsb3NlIiwicmVtb3ZlIiwiZSIsInRhcmdldCIsImFkZEV2ZW50TGlzdGVuZXIiLCIkbW9kYWwiLCIkYnV0dG9uIiwibXlTd2lwZXIiLCJTd2lwZXIiLCJzbGlkZXNQZXJWaWV3IiwiZnJlZU1vZGUiLCJuYXZpZ2F0aW9uIiwibmV4dEVsIiwicHJldkVsIiwiYnJlYWtwb2ludHMiLCIkc3dpcGVyIiwiJCIsImNvbnNvbGUiLCJsb2ciXSwibWFwcGluZ3MiOiI7O0FBQUEsQ0FBQSxZQUFBO0FBQ0EsTUFBQUEsRUFBQSxHQUFBQyxNQUFBLENBQUFDLFdBQUEsR0FBQSxJQUFBO0FBQ0FDLEVBQUFBLFFBQUEsQ0FBQUMsZUFBQSxDQUFBQyxLQUFBLENBQUFDLFdBQUEsQ0FBQSxNQUFBLFlBQUFOLEVBQUE7QUFFQSxNQUFBTyxLQUFBLEdBQUFKLFFBQUEsQ0FBQUssYUFBQSxDQUFBLE1BQUEsQ0FBQTs7QUFFQSxXQUFBQyxRQUFBLENBQUFDLElBQUEsRUFBQTtBQUNBLFFBQUFDLEtBQUE7QUFDQSxXQUFBLFVBQUFDLEtBQUEsRUFBQTtBQUNBLFVBQUFELEtBQUEsRUFBQUUsWUFBQSxDQUFBRixLQUFBLENB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QUFELE1BQUEsQ0FBQTtBQUNBLENBckVBOztBQ0FBLENBQUEsWUFBQTtBQUNBLE1BQUFFLFFBQUEsR0FBQSxJQUFBQyxNQUFBLENBQUEsbUJBQUEsRUFBQTtBQUNBQyxJQUFBQSxhQUFBLEVBQUEsTUFEQTtBQUVBQyxJQUFBQSxRQUFBLEVBQUEsSUFGQTtBQUdBQyxJQUFBQSxVQUFBLEVBQUE7QUFDQUMsTUFBQUEsTUFBQSxFQUFBLHFCQURBO0FBRUFDLE1BQUFBLE1BQUEsRUFBQTtBQUZBLEtBSEE7QUFPQUMsSUFBQUEsV0FBQSxFQUFBO0FBQ0EsV0FBQTtBQUNBTCxRQUFBQSxhQUFBLEVBQUEsQ0FEQTtBQUVBQyxRQUFBQSxRQUFBLEVBQUE7QUFGQTtBQURBO0FBUEEsR0FBQSxDQUFBO0FBaUJBLE1BQUFLLE9BQUEsR0FBQUMsQ0FBQSxDQUFBLG1CQUFBLENBQUE7QUFDQUMsRUFBQUEsT0FBQSxDQUFBQyxHQUFBLENBQUFILE9BQUE7QUFDQSxDQXBCQSIsImZpbGUiOiJtYWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiKCgpID0+IHtcbiAgbGV0IHZoID0gd2luZG93LmlubmVySGVpZ2h0ICogMC4wMTtcbiAgZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LnN0eWxlLnNldFByb3BlcnR5KCctLXZoJywgYCR7dmh9cHhgKTtcblxuICBjb25zdCAkYm9keSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ2JvZHknKTtcblxuICBmdW5jdGlvbiBkZWJvdW5jZShmdW5jKXtcbiAgICB2YXIgdGltZXI7XG4gICAgcmV0dXJuIGZ1bmN0aW9uKGV2ZW50KXtcbiAgICAgIGlmKHRpbWVyKSBjbGVhclRpbWVvdXQodGltZXIpO1xuICAgICAgdGltZXIgPSBzZXRUaW1lb3V0KGZ1bmMsNTAwLGV2ZW50KTtcbiAgICB9O1xuICB9XG5cbiAgZnVuY3Rpb24gTW9kYWwgKHRyaWdnZXIsIG1vZGFsKSB7XG4gICAgdGhpcy50cmlnZ2VyID0gdHJpZ2dlcjtcbiAgICB0aGlzLm1vZGFsID0gbW9kYWw7XG4gICAgdGhpcy5vdmVybGF5ID0gdGhpcy5tb2RhbC5xdWVyeVNlbGVjdG9yKCcubW9kYWxfX292ZXJsYXknKTtcbiAgICB0aGlzLmNsb3NlQnRuID0gdGhpcy5tb2RhbC5xdWVyeVNlbGVjdG9yKCcubW9kYWxfX2Nsb3NlJyk7XG5cbiAgICB0aGlzLm9uT3ZlcmxheUNsaWNrID0gdGhpcy5vbk92ZXJsYXlDbGljay5iaW5kKHRoaXMpO1xuICAgIHRoaXMub25DbG9zZUNsaWNrID0gdGhpcy5vbkNsb3NlQ2xpY2suYmluZCh0aGlzKTtcbiAgICB0aGlzLm9uVHJpZ2dlckNsaWNrID0gdGhpcy5vblRyaWdnZXJDbGljay5iaW5kKHRoaXMpO1xuICAgIHRoaXMub25SZXNpemUgPSB0aGlzLm9uUmVzaXplLmJpbmQodGhpcyk7XG5cbiAgICB0aGlzLmFkZEV2ZW50TGlzdGVuZXJzKCk7XG4gIH1cblxuICBNb2RhbC5wcm90b3R5cGUub3BlbiA9IGZ1bmN0aW9uKCkge1xuICAgIHRoaXMubW9kYWwuY2xhc3NMaXN0LmFkZCgnanMtc2hvdycpO1xuICAgICRib2R5LmNsYXNzTGlzdC5hZGQoJ2pzX19ib2R5LW5vLXNjcm9sbCcpO1xuICB9XG5cbiAgTW9kYWwucHJvdG90eXBlLmNsb3NlID0gZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5tb2RhbC5jbGFzc0xpc3QucmVtb3ZlKCdqcy1zaG93Jyk7XG4gICAgJGJvZHkuY2xhc3NMaXN0LnJlbW92ZSgnanNfX2JvZHktbm8tc2Nyb2xsJyk7XG4gIH1cblxuICBNb2RhbC5wcm90b3R5cGUub25PdmVybGF5Q2xpY2sgPSBmdW5jdGlvbihlKSB7XG4gICAgaWYgKGUudGFyZ2V0ID09PSB0aGlzLm92ZXJsYXkpIHtcbiAgICAgIHRoaXMuY2xvc2UoKTtcbiAgICB9XG4gIH1cblxuICBNb2RhbC5wcm90b3R5cGUub25DbG9zZUNsaWNrID0gZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5jbG9zZSgpO1xuICB9XG5cbiAgTW9kYWwucHJvdG90eXBlLm9uVHJpZ2dlckNsaWNrID0gZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5vcGVuKCk7XG4gIH1cblxuICBNb2RhbC5wcm90b3R5cGUub25SZXNpemUgPSBmdW5jdGlvbigpIHtcbiAgICAgIGxldCB2aCA9IHdpbmRvdy5pbm5lckhlaWdodCAqIDAuMDE7XG4gICAgICBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuc3R5bGUuc2V0UHJvcGVydHkoJy0tdmgnLCBgJHt2aH1weGApO1xuICB9O1xuXG4gIE1vZGFsLnByb3RvdHlwZS5hZGRFdmVudExpc3RlbmVycyA9IGZ1bmN0aW9uKCkge1xuICAgIHRoaXMub3ZlcmxheS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHRoaXMub25PdmVybGF5Q2xpY2spO1xuICAgIHRoaXMuY2xvc2VCdG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCB0aGlzLm9uQ2xvc2VDbGljayk7XG4gICAgdGhpcy50cmlnZ2VyLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgdGhpcy5vblRyaWdnZXJDbGljayk7XG4gICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ3Jlc2l6ZScsIGRlYm91bmNlKHRoaXMub25SZXNpemUpKTtcbiAgfVxuXG4gIGNvbnN0ICRtb2RhbCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5tb2RhbCcpO1xuICBjb25zdCAkYnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLm1vZGFsLWJ1dHRvbicpO1xuXG5cbiAgY29uc3QgbW9kYWwgPSBuZXcgTW9kYWwoJGJ1dHRvbiwgJG1vZGFsKTtcbn0pKCk7XG4iLCIoKCkgPT4ge1xuICB2YXIgbXlTd2lwZXIgPSBuZXcgU3dpcGVyKCcuc3dpcGVyLWNvbnRhaW5lcicsIHtcbiAgICBzbGlkZXNQZXJWaWV3OiAnYXV0bycsXG4gICAgZnJlZU1vZGU6IHRydWUsXG4gICAgbmF2aWdhdGlvbjoge1xuICAgICAgbmV4dEVsOiAnLnN3aXBlci1idXR0b24tbmV4dCcsXG4gICAgICBwcmV2RWw6ICcuc3dpcGVyLWJ1dHRvbi1wcmV2JyxcbiAgICB9LFxuICAgIGJyZWFrcG9pbnRzOiB7XG4gICAgICA5MDA6IHtcbiAgICAgICAgc2xpZGVzUGVyVmlldzogMSxcbiAgICAgICAgZnJlZU1vZGU6IGZhbHNlLFxuICAgICAgfVxuICAgIH1cbiAgfSk7XG5cblxuXG4gIGNvbnN0ICRzd2lwZXIgPSAkKCcuc3dpcGVyLWNvbnRhaW5lcicpO1xuICBjb25zb2xlLmxvZygkc3dpcGVyKTtcbn0pKCk7XG4iXX0=
